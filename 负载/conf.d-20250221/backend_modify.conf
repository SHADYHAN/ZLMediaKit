content_by_lua_block {
    local backend_list = ngx.shared.backend_list
    local backend_ips = ngx.shared.backend_ips

    -- 读取客户端发送的数据
    local sock, err = ngx.req.socket()
    if not sock then
        ngx.log(ngx.ERR, "Failed to get socket: ", err)
        return
    end

    local data, err = sock:receive()
    if not data then
        ngx.log(ngx.ERR, "Failed to receive data: ", err)
        return
    end

    -- 解析命令
    local command, arg1, arg2 = string.match(data, "^(%S+)%s*(%S*)%s*(%S*)$")

    if command == "UPDATE_BACKEND" then
        -- 更新后端列表
        local backends = {}
        for ip in string.gmatch(arg1, "[^,]+") do
            if not string.match(ip, "^%d+%.%d+%.%d+%.%d+$") then
                ngx.log(ngx.ERR, "Invalid IP: ", ip)
                return
            end
            table.insert(backends, ip)
        end

        -- 将后端列表存储到共享内存
        local ok, err = backend_list:set("backends", table.concat(backends, ","))
        if not ok then
            ngx.log(ngx.ERR, "Failed to update backends: ", err)
            return
        end

        ngx.log(ngx.INFO, "Backends updated successfully: ", table.concat(backends, ","))
        sock:send("Backends updated successfully\n")

    elseif command == "UPDATE_BACKEND_IP" then
        -- 更新backend_ips中的某个值
        local client_ip = arg1
        local backend_ip = arg2

        if not string.match(client_ip, "^%d+%.%d+%.%d+%.%d+$") or not string.match(backend_ip, "^%d+%.%d+%.%d+%.%d+$") then
            ngx.log(ngx.ERR, "Invalid IP format")
            return
        end

        local ok, err = backend_ips:set(client_ip, backend_ip)
        if not ok then
            ngx.log(ngx.ERR, "Failed to update backend IP: ", err)
            return
        end

        ngx.log(ngx.INFO, "Backend IP updated successfully: ", client_ip, " -> ", backend_ip)
        sock:send("Backend IP updated successfully\n")

    elseif command == "CLEAR_BACKEND_IPS" then
        -- 清空backend_ips
        backend_ips:flush_all()
        ngx.log(ngx.INFO, "Backend IPs cleared successfully")
        sock:send("Backend IPs cleared successfully\n")

    elseif command == "SHOW_BACKEND_IPS" then
        -- 查看backend_ips内容
        local keys = backend_ips:get_keys()
        local result = "Backend IPs:\n"
        for _, key in ipairs(keys) do
            local value = backend_ips:get(key)
            result = result .. key .. " -> " .. tostring(value) .. "\n"
        end
        sock:send(result)

    elseif command == "SHOW_BACKEND_LIST" then
        -- 查看backend_list内容
        local backends_str = backend_list:get("backends") or "default_backends"
        sock:send("Backend List: " .. backends_str .. "\n")

    else
        ngx.log(ngx.ERR, "Unknown command: ", command)
        sock:send("Unknown command\n")
    end
}
